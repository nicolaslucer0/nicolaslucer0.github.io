{"version":3,"sources":["Assets/img/header.jpg","Common/Footer/index.js","Common/Header/index.js","Common/Home/index.js","Common/Navbar/BurgerMenu.js","Common/Navbar/CollapseMenu.js","Common/Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","FooterNode","styled","footer","Header","props","HeaderContainer","FlexContainer","TextContainer","Subtitle","Title","div","HeaderImage","Home","Burgermenu","Wrapper","onClick","event","onChange","navbarState","className","scrollClass","CollapseMenu","open","useSpring","closed","handleChange","CollapseWrapper","style","transform","interpolate","range","output","openValue","close","NavLinks","to","animated","ul","Navbar","barAnimation","from","NavBar","scroll","NavList","BurgerWrapper","BurgerMenu","nav","strapi","Strapi","App","useState","users","setUsers","navbarOpen","setNavbarOpen","useHasScrolled","useEffect","a","getEntries","console","log","getUsers","map","user","username","exact","path","component","distance","setScroll","onScroll","scrollCheck","window","scrollY","document","addEventListener","removeEventListener","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,oC,whBCI3C,IAMeC,EANA,WACb,OACE,kBAACC,EAAD,OAMEA,EAAaC,IAAOC,OAAV,K,mhCCThB,IAeeC,EAfA,SAACC,GACd,OACE,oCACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,0BACA,kBAACC,EAAD,2CAUNJ,EAAkBJ,IAAOS,IAAV,IAOOC,KAKtBL,EAAgBL,IAAOS,IAAV,KAabH,EAAgBN,IAAOS,IAAV,KAQbD,EAAQR,IAAOS,IAAV,KAKLF,EAAWP,IAAOS,IAAV,KC7CCE,EATF,WACX,OACE,oCACE,kBAAC,EAAD,Q,wsCCJN,IAgBeC,EAhBI,SAACT,GAKlB,OACE,kBAACU,EAAD,CAASC,QALX,SAAsBC,GACpBZ,EAAMa,SAASb,EAAMc,cAIWC,UAAS,WAAMf,EAAMc,YAAc,OAAS,GAAnC,YAA0Cd,EAAMgB,cACvF,yBAAKD,UAAS,WAAMf,EAAMc,YAAc,OAAS,GAAnC,YAA0Cd,EAAMgB,cAC5D,sCACA,sCACA,yCAQFN,EAAUb,IAAOS,IAAV,K,01BCfb,IA+BeW,EA/BM,SAACjB,GAAW,IACvBkB,EAASC,YAAU,CAAED,KAAMlB,EAAMc,YAAc,EAAI,IAAnDI,KACAE,EAAWD,YAAU,CAAEC,OAAQpB,EAAMc,YAAc,EAAI,IAAvDM,OAER,SAASC,IACPrB,EAAMa,WAGR,OACE,kBAACS,EAAD,CACEP,UAAaf,EAAMc,YAAc,OAAS,OAC1CS,MAAO,CACLC,UAAWN,EACRO,YAAY,CAAEC,MAAO,CAAC,EAAG,GAAK,GAAK,GAAIC,OAAQ,CAAC,GAAI,GAAI,GAAI,OAC5DF,aAAY,SAACG,GAAD,+BAAiCA,EAAjC,YACfC,MAAOT,EACJK,YAAY,CAAEC,MAAO,CAAC,EAAG,GAAK,GAAIC,OAAQ,EAAG,IAAK,GAAI,GAAI,KAC1DF,aAAY,SAACG,GAAD,+BAAiCA,EAAjC,cAGjB,kBAACE,EAAD,KACE,kBAAC,IAAD,CAAMnB,QAASU,EAAcU,GAAG,cAAhC,aACA,kBAAC,IAAD,CAAMpB,QAASU,EAAcU,GAAG,aAAhC,YACA,kBAAC,IAAD,CAAMpB,QAASU,EAAcU,GAAG,aAAhC,YACA,kBAAC,IAAD,CAAMpB,QAASU,EAAcU,GAAG,YAAhC,2BACA,kBAAC,IAAD,CAAMpB,QAASU,EAAcU,GAAG,aAAhC,eAQFT,EAAkBzB,YAAOmC,IAAS1B,IAAhBT,CAAH,KAiBfiC,EAAWjC,IAAOoC,GAAV,K,26CCjDd,IAiCeC,EAjCA,SAAClC,GACd,SAASqB,IACPrB,EAAMa,WAGR,IAAMsB,EAAehB,YAAU,CAC7BiB,KAAM,CAAEZ,UAAW,6BACnBA,UAAW,yBAGb,OACE,oCACE,kBAAC,EAAD,CAAcV,YAAad,EAAMc,YAAaD,SAAUQ,IACxD,kBAACgB,EAAD,CAAQtB,UAAS,UAAKf,EAAMc,YAAc,OAAS,GAAlC,YAA2Cd,EAAMsC,OAAS,SAAW,IAAMf,MAAOY,GACjG,kBAAC,EAAD,CAAepB,UAAS,UAAKf,EAAMc,YAAc,OAAS,GAAlC,YAA2Cd,EAAMsC,OAAS,SAAW,KAC3F,kBAACC,EAAD,CAASxB,UAAS,UAAKf,EAAMc,YAAc,OAAS,GAAlC,YAA0Cd,EAAMsC,OAAS,SAAW,KACpF,kBAAC,IAAD,CAAMP,GAAG,SAAT,eACA,kBAAC,IAAD,CAAMA,GAAG,SAAT,uBACA,kBAAC,IAAD,CAAMA,GAAG,SAAT,mBAEF,kBAACS,EAAD,KACE,kBAACC,EAAD,CACEzB,YAAW,UAAOhB,EAAMsC,OAAS,SAAW,IAC5CxB,YAAad,EAAMc,YACnBD,SAAUQ,SAWlBgB,EAASxC,YAAOmC,IAASU,IAAhB7C,CAAH,KAiBNK,EAAgBL,IAAOS,IAAV,KA0BbkC,EAAgB3C,IAAOS,IAAV,KAIbiC,EAAU1C,IAAOoC,GAAV,KClFPU,EAAS,IAAIC,IAAO,yBAiDXC,EA/CH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEoBF,oBAAS,GAF7B,mBAETG,EAFS,KAEGC,EAFH,KAGVZ,EAASa,GAAe,KAoB9B,OAdAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,+EAEwBV,EAAOW,WAAW,SAF1C,OAEUP,EAFV,OAGIC,EAAS,CAAED,UAHf,gDAKIQ,QAAQC,IAAR,MALJ,QAOED,QAAQC,IAAIT,GAPd,0DADc,uBAAC,WAAD,wBAWdU,KACC,CAACV,IAGF,oCACE,iCACGA,EAAMW,KAAI,SAACC,GACV,OACE,iCACE,uCAAaA,EAAKC,eAM1B,kBAAC,IAAD,KACA,kBAAC,EAAD,CAAQtB,OAAQA,EAAQxB,YAAamC,EAAYpC,SA/BhC,WACnBqC,GAAeD,MA+BX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,IAAIC,UAAWvD,KAIrC,kBAAC,EAAD,SAOO2C,GAAiB,WAAoB,IAAnBa,EAAkB,uDAAP,GAAO,EACnBlB,oBAAS,GADU,mBACxCR,EADwC,KAChC2B,EADgC,KAkB/C,OAfAb,qBAAU,WACR,IAAMc,EAAW,WACf,IAAMC,EAAcC,OAAOC,SAAWL,EAClCG,IAAgB7B,GAClB2B,EAAUE,IAMd,OAFAG,SAASC,iBAAiB,SAAUL,GAE7B,WACLI,SAASE,oBAAoB,SAAUN,MAExC,CAAC5B,EAAQ2B,EAAWD,IAEhB1B,GChEWmC,QACW,cAA7BL,OAAOM,SAASC,UAEe,UAA7BP,OAAOM,SAASC,UAEhBP,OAAOM,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFT,SAASU,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjC,QAAQiC,MAAMA,EAAMC,c","file":"static/js/main.17124068.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.654ce14c.jpg\";","import React from \"react\";\r\n//import \"./Footer.css\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <FooterNode>\r\n    </FooterNode>\r\n  );\r\n};\r\nexport default Footer;\r\n\r\nconst FooterNode = styled.footer`\r\n   {\r\n    padding: 3em 9em;\r\n    border-top: 1px solid #ddd;\r\n    letter-spacing: 0.1em;\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 2em 0;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HeaderImage from \"../../Assets/img/header.jpg\";\r\nconst Header = (props) => {\r\n  return (\r\n    <>\r\n      <HeaderContainer>\r\n        <FlexContainer>\r\n          <TextContainer>\r\n            <Subtitle>Nicol√°s Lucero</Subtitle>\r\n            <Title>Software developer & designer</Title>\r\n          </TextContainer>\r\n        </FlexContainer>\r\n      </HeaderContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\nconst HeaderContainer = styled.div`\r\n   {\r\n    width: 100%;\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n    height: 100vh;\r\n    background-image: url(${HeaderImage});\r\n    background-size: cover;\r\n  }\r\n`;\r\n\r\nconst FlexContainer = styled.div`\r\n  background: rgba(0, 0, 0, 0.6);\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst TextContainer = styled.div`\r\n  color: var(--white);\r\n  display: block;\r\n  font-size: 20px;\r\n  letter-spacing: 0.18em;\r\n  justify-content: center;\r\n  text-align: center;\r\n`;\r\nconst Title = styled.div`\r\n  font-size: 1.3em;\r\n  margin: 0;\r\n  line-height: 1;\r\n`;\r\nconst Subtitle = styled.div`\r\n  color: var(--white);\r\n  font-size: 2.4em;\r\n  font-weight: 500;\r\n`;\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport Header from \"../Header\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Burgermenu = (props) => {\r\n  function handleChange(event) {\r\n    props.onChange(props.navbarState);\r\n  }\r\n\r\n  return (\r\n    <Wrapper onClick={handleChange} className={` ${props.navbarState ? \"open\" : \"\" } ${props.scrollClass}`}>\r\n      <div className={` ${props.navbarState ? \"open\" : \"\" } ${props.scrollClass}`}>\r\n        <span>&nbsp;</span>\r\n        <span>&nbsp;</span>\r\n        <span>&nbsp;</span>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Burgermenu;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  padding-top: 0.7rem;\r\n  cursor: pointer;\r\n  display: block;\r\n  z-index: 20;\r\n  \r\n  @media (min-width: 768px) {\r\n    display: none;\r\n    &.open {\r\n      display: block;\r\n    }\r\n    &.sticky {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  & span {\r\n    background: white;\r\n    display: block;\r\n    position: relative;\r\n    width: 3.5rem;\r\n    height: 0.4rem;\r\n    margin-bottom: 0.3rem;\r\n    transition: all ease-in-out 0.2s;\r\n  }\r\n  span:nth-child(2) {\r\n    opacity: 0;\r\n  }\r\n  .open:not(.sticky) span:nth-child(1) {\r\n    background: white;\r\n    transform: rotate(-45deg);\r\n    top: 11px;\r\n  }\r\n  .open:not(.sticky) span:nth-child(3) {\r\n    transform: rotate(45deg);\r\n    top: -11px;\r\n    background: white;\r\n  }\r\n\r\n  .sticky:not(.open) span:nth-child(1) {\r\n    background: var(--primary);\r\n  }\r\n  .sticky:not(.open) span:nth-child(3) {\r\n    background: var(--primary);\r\n  }\r\n\r\n  .sticky.open span:nth-child(1) {\r\n    background: white;\r\n    transform: rotate(-45deg);\r\n    top: 11px;\r\n  }\r\n  .sticky.open span:nth-child(3) {\r\n    transform: rotate(45deg);\r\n    background: white;\r\n    top: -11px;\r\n  }\r\n\r\n  \r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CollapseMenu = (props) => {\r\n  const { open } = useSpring({ open: props.navbarState ? 0 : 1 });\r\n  const { closed } = useSpring({ closed: props.navbarState ? 1 : 0 });\r\n  \r\n  function handleChange() {\r\n    props.onChange();\r\n  }\r\n\r\n  return (\r\n    <CollapseWrapper\r\n      className={!!props.navbarState ? \"show\" : \"hide\"}\r\n      style={{\r\n        transform: open\r\n          .interpolate({ range: [0, 0.2, 0.3, 1], output: [0, -20, 0, -200] })\r\n          .interpolate((openValue) => `translate3d(0, ${openValue}px, 0`),\r\n        close: closed\r\n          .interpolate({ range: [1, 0.5, 0], output: [ -200, 0, -20 ,0] })\r\n          .interpolate((openValue) => `translate3d(0, ${openValue}px, 0`),\r\n      }}\r\n    >\r\n      <NavLinks>\r\n        <Link onClick={handleChange} to=\"/servicios\">Servicios</Link>\r\n        <Link onClick={handleChange} to=\"/clientes\">Clientes</Link>\r\n        <Link onClick={handleChange} to=\"/nosotros\">Nosotros</Link>\r\n        <Link onClick={handleChange} to=\"/trabajo\">Trabaj√° con Nosotros</Link>\r\n        <Link onClick={handleChange} to=\"/contacto\">Contacto</Link>\r\n      </NavLinks>\r\n    </CollapseWrapper>\r\n  );\r\n};\r\n\r\nexport default CollapseMenu;\r\n\r\nconst CollapseWrapper = styled(animated.div)`\r\n  background: var(--primary);\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  z-index: 2;\r\n\r\n  &.hide {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst NavLinks = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  list-style-type: none;\r\n  padding: 0;\r\n  transition: 0.3s;\r\n  align-items: center;\r\n  & a {\r\n    transition: all 300ms linear 0s;\r\n    font-size: 2rem;\r\n    line-height: 2;\r\n    color: #dfe6e9;\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n    &:hover {\r\n      color: black;\r\n      transform: scale(1.1);\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      font-size: 20px;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BurgerMenu from \"./BurgerMenu\";\r\nimport CollapseMenu from \"./CollapseMenu\";\r\n\r\nconst Navbar = (props) => {\r\n  function handleChange() {\r\n    props.onChange();\r\n  }\r\n\r\n  const barAnimation = useSpring({\r\n    from: { transform: \"translate3d(0, -10rem, 0)\" },\r\n    transform: \"translate3d(0, 0, 0)\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <CollapseMenu navbarState={props.navbarState} onChange={handleChange} />\r\n      <NavBar className={`${props.navbarState ? \"open\" : \"\"} ${ !!props.scroll ? \"sticky\" : \"\"}`} style={barAnimation}>\r\n        <FlexContainer className={`${props.navbarState ? \"open\" : \"\"} ${ !!props.scroll ? \"sticky\" : \"\"}`}>\r\n          <NavList className={`${props.navbarState ? \"open\" : \"\"} ${!!props.scroll ? \"sticky\" : \"\"}`}>\r\n            <Link to=\"#blog\">Sobre m√≠</Link>\r\n            <Link to=\"#blog\">Experiencia laboral</Link>\r\n            <Link to=\"#blog\">Tecnolog√≠as</Link>\r\n          </NavList>\r\n          <BurgerWrapper>\r\n            <BurgerMenu\r\n              scrollClass={`${!!props.scroll ? \"sticky\" : \"\"}`}\r\n              navbarState={props.navbarState}\r\n              onChange={handleChange}\r\n            />\r\n          </BurgerWrapper>\r\n        </FlexContainer>\r\n      </NavBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\nconst NavBar = styled(animated.nav)`\r\n  position: fixed;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 3;\r\n  font-size: 1.4rem;\r\n  height: 8vh;\r\n  transition: 1s;\r\n  background: transparent;\r\n  padding: 0;\r\n  margin: auto;\r\n  &.sticky.open {\r\n    background: transparent;\r\n  }\r\n`;\r\n\r\nconst FlexContainer = styled.div`\r\n  max-width: 120rem;\r\n  display: flex;\r\n  margin: auto;\r\n  padding: 0 2rem;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 5rem;\r\n  background: white;\r\n  background: transparent;\r\n  transition: 0.3s;\r\n  &.sticky:not(.open) {\r\n    background: white;\r\n    justify-content: space-between;\r\n  }\r\n  &.sticky.open {\r\n    background: transparent;\r\n  }\r\n  @media (max-width: 768px) {\r\n    justify-content: flex-end;\r\n    &.sticky {\r\n      justify-content: space-between;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BurgerWrapper = styled.div`\r\n  margin: auto 0;\r\n`;\r\n\r\nconst NavList = styled.ul`\r\n   {\r\n    display: flex;\r\n    flex-grow: 1;\r\n    justify-content: center;\r\n    &.open {\r\n      display: none;\r\n    }\r\n    &.sticky {\r\n      display: none;\r\n    }\r\n    a {\r\n      margin: 0 1em;\r\n      color: white;\r\n      text-decoration: none;\r\n      transition: 0.4s;\r\n      &:hover {\r\n        color: var(--primary);\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Footer from \"./Common/Footer\";\r\nimport Home from \"./Common/Home\";\r\n\r\nimport Strapi from \"strapi-sdk-javascript/build/main\";\r\nimport Navbar from \"./Common/Navbar/Navbar\";\r\nconst strapi = new Strapi(\"http://localhost:1337\");\r\n\r\nconst App = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [navbarOpen, setNavbarOpen] = useState(false);\r\n  const scroll = useHasScrolled(250);\r\n\r\n  const handleChange = () => {\r\n    setNavbarOpen(!navbarOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getUsers() {\r\n      try {\r\n        const users = await strapi.getEntries(\"users\");\r\n        setUsers({ users });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      console.log(users);\r\n    }\r\n\r\n    getUsers();\r\n  }, [users]);\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        {users.map((user) => {\r\n          return (\r\n            <article>\r\n              <div>Title: {user.username}</div>\r\n            </article>\r\n          );\r\n        })}\r\n      </section>\r\n\r\n      <Router>\r\n      <Navbar scroll={scroll} navbarState={navbarOpen} onChange={handleChange} />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          {/*<Route component={NotFoundPage} />*/}\r\n        </Switch>\r\n        {/*<GoogleAnalytics />*/}\r\n      <Footer />\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n\r\nexport const useHasScrolled = (distance = 10) => {\r\n  const [scroll, setScroll] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      const scrollCheck = window.scrollY >= distance;\r\n      if (scrollCheck !== scroll) {\r\n        setScroll(scrollCheck);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"scroll\", onScroll);\r\n    };\r\n  }, [scroll, setScroll, distance]);\r\n\r\n  return scroll;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}