/*! For license information please see tsparticles.updater.angle.min.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("tsparticles-engine"));else if("function"==typeof define&&define.amd)define(["tsparticles-engine"],t);else{var o="object"==typeof exports?t(require("tsparticles-engine")):t(e.window);for(var a in o)("object"==typeof exports?exports:e)[a]=o[a]}}(this,(e=>(()=>{"use strict";var t={961:t=>{t.exports=e}},o={};function a(e){var n=o[e];if(void 0!==n)return n.exports;var r=o[e]={exports:{}};return t[e](r,r.exports,a),r.exports}a.d=(e,t)=>{for(var o in t)a.o(t,o)&&!a.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{a.r(n),a.d(n,{loadAngleUpdater:()=>o});var e=a(961);class t{constructor(e){this.container=e}init(t){const o=t.options.rotate;t.rotate={enable:o.animation.enable,value:(0,e.getRangeValue)(o.value)*Math.PI/180};let a=o.direction;if("random"===a){a=Math.floor(2*(0,e.getRandom)())>0?"counter-clockwise":"clockwise"}switch(a){case"counter-clockwise":case"counterClockwise":t.rotate.status=1;break;case"clockwise":t.rotate.status=0}const n=t.options.rotate.animation;n.enable&&(t.rotate.decay=1-(0,e.getRangeValue)(n.decay),t.rotate.velocity=(0,e.getRangeValue)(n.speed)/360*this.container.retina.reduceFactor,n.sync||(t.rotate.velocity*=(0,e.getRandom)())),t.rotation=t.rotate.value}isEnabled(e){const t=e.options.rotate,o=t.animation;return!e.destroyed&&!e.spawning&&o.enable&&!t.path}update(e,t){var o,a;this.isEnabled(e)&&(!function(e,t){var o,a;const n=e.rotate;if(!n)return;const r=e.options.rotate.animation,i=(null!==(o=n.velocity)&&void 0!==o?o:0)*t.factor,l=2*Math.PI,s=null!==(a=n.decay)&&void 0!==a?a:1;r.enable&&(0===n.status?(n.value+=i,n.value>l&&(n.value-=l)):(n.value-=i,n.value<0&&(n.value+=l)),n.velocity&&1!==s&&(n.velocity*=s))}(e,t),e.rotation=null!==(a=null===(o=e.rotate)||void 0===o?void 0:o.value)&&void 0!==a?a:0)}}async function o(e){await e.addParticleUpdater("angle",(e=>new t(e)))}})(),n})()));