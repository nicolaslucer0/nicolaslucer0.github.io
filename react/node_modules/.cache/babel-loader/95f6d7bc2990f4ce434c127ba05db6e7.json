{"ast":null,"code":"import { executeOnSingleOrMultiple, itemFromSingleOrMultiple } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport class Absorbers {\n  constructor(container) {\n    this.container = container;\n    this.array = [];\n    this.absorbers = [];\n    this.interactivityAbsorbers = [];\n\n    container.getAbsorber = idxOrName => idxOrName === undefined || typeof idxOrName === \"number\" ? this.array[idxOrName || 0] : this.array.find(t => t.name === idxOrName);\n\n    container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n  }\n\n  addAbsorber(options, position) {\n    const absorber = new AbsorberInstance(this, this.container, options, position);\n    this.array.push(absorber);\n    return absorber;\n  }\n\n  draw(context) {\n    for (const absorber of this.array) {\n      context.save();\n      absorber.draw(context);\n      context.restore();\n    }\n  }\n\n  handleClickMode(mode) {\n    const absorberOptions = this.absorbers,\n          modeAbsorbers = this.interactivityAbsorbers;\n\n    if (mode === \"absorber\") {\n      const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers),\n            absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : itemFromSingleOrMultiple(absorberOptions),\n            aPosition = this.container.interactivity.mouse.clickPosition;\n      this.addAbsorber(absorbersOptions, aPosition);\n    }\n  }\n\n  init(options) {\n    var _a, _b;\n\n    if (!options) {\n      return;\n    }\n\n    this.absorbers = executeOnSingleOrMultiple(options.absorbers, absorber => {\n      const tmp = new Absorber();\n      tmp.load(absorber);\n      return tmp;\n    });\n    this.interactivityAbsorbers = executeOnSingleOrMultiple((_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers, absorber => {\n      const tmp = new Absorber();\n      tmp.load(absorber);\n      return tmp;\n    });\n    executeOnSingleOrMultiple(this.absorbers, absorber => {\n      this.addAbsorber(absorber);\n    });\n  }\n\n  particleUpdate(particle) {\n    for (const absorber of this.array) {\n      absorber.attract(particle);\n\n      if (particle.destroyed) {\n        break;\n      }\n    }\n  }\n\n  removeAbsorber(absorber) {\n    const index = this.array.indexOf(absorber);\n\n    if (index >= 0) {\n      this.array.splice(index, 1);\n    }\n  }\n\n  resize() {\n    for (const absorber of this.array) {\n      absorber.resize();\n    }\n  }\n\n  stop() {\n    this.array = [];\n  }\n\n}","map":{"version":3,"names":["executeOnSingleOrMultiple","itemFromSingleOrMultiple","Absorber","AbsorberInstance","Absorbers","constructor","container","array","absorbers","interactivityAbsorbers","getAbsorber","idxOrName","undefined","find","t","name","addAbsorber","options","position","absorber","push","draw","context","save","restore","handleClickMode","mode","absorberOptions","modeAbsorbers","absorbersModeOptions","absorbersOptions","aPosition","interactivity","mouse","clickPosition","init","_a","_b","tmp","load","modes","particleUpdate","particle","attract","destroyed","removeAbsorber","index","indexOf","splice","resize","stop"],"sources":["/home/nicolas/Development/personal/react/nicolaslucer0.github.io/react/node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js"],"sourcesContent":["import { executeOnSingleOrMultiple, itemFromSingleOrMultiple } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            context.save();\n            absorber.draw(context);\n            context.restore();\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        this.absorbers = executeOnSingleOrMultiple(options.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n        this.interactivityAbsorbers = executeOnSingleOrMultiple((_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n        executeOnSingleOrMultiple(this.absorbers, (absorber) => {\n            this.addAbsorber(absorber);\n        });\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n"],"mappings":"AAAA,SAASA,yBAAT,EAAoCC,wBAApC,QAAoE,oBAApE;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAO,MAAMC,SAAN,CAAgB;EACnBC,WAAW,CAACC,SAAD,EAAY;IACnB,KAAKA,SAAL,GAAiBA,SAAjB;IACA,KAAKC,KAAL,GAAa,EAAb;IACA,KAAKC,SAAL,GAAiB,EAAjB;IACA,KAAKC,sBAAL,GAA8B,EAA9B;;IACAH,SAAS,CAACI,WAAV,GAAyBC,SAAD,IAAeA,SAAS,KAAKC,SAAd,IAA2B,OAAOD,SAAP,KAAqB,QAAhD,GACjC,KAAKJ,KAAL,CAAWI,SAAS,IAAI,CAAxB,CADiC,GAEjC,KAAKJ,KAAL,CAAWM,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWJ,SAAlC,CAFN;;IAGAL,SAAS,CAACU,WAAV,GAAwB,CAACC,OAAD,EAAUC,QAAV,KAAuB,KAAKF,WAAL,CAAiBC,OAAjB,EAA0BC,QAA1B,CAA/C;EACH;;EACDF,WAAW,CAACC,OAAD,EAAUC,QAAV,EAAoB;IAC3B,MAAMC,QAAQ,GAAG,IAAIhB,gBAAJ,CAAqB,IAArB,EAA2B,KAAKG,SAAhC,EAA2CW,OAA3C,EAAoDC,QAApD,CAAjB;IACA,KAAKX,KAAL,CAAWa,IAAX,CAAgBD,QAAhB;IACA,OAAOA,QAAP;EACH;;EACDE,IAAI,CAACC,OAAD,EAAU;IACV,KAAK,MAAMH,QAAX,IAAuB,KAAKZ,KAA5B,EAAmC;MAC/Be,OAAO,CAACC,IAAR;MACAJ,QAAQ,CAACE,IAAT,CAAcC,OAAd;MACAA,OAAO,CAACE,OAAR;IACH;EACJ;;EACDC,eAAe,CAACC,IAAD,EAAO;IAClB,MAAMC,eAAe,GAAG,KAAKnB,SAA7B;IAAA,MAAwCoB,aAAa,GAAG,KAAKnB,sBAA7D;;IACA,IAAIiB,IAAI,KAAK,UAAb,EAAyB;MACrB,MAAMG,oBAAoB,GAAG5B,wBAAwB,CAAC2B,aAAD,CAArD;MAAA,MAAsEE,gBAAgB,GAAGD,oBAAoB,KAAK,IAAzB,IAAiCA,oBAAoB,KAAK,KAAK,CAA/D,GAAmEA,oBAAnE,GAA0F5B,wBAAwB,CAAC0B,eAAD,CAA3M;MAAA,MAA8NI,SAAS,GAAG,KAAKzB,SAAL,CAAe0B,aAAf,CAA6BC,KAA7B,CAAmCC,aAA7Q;MACA,KAAKlB,WAAL,CAAiBc,gBAAjB,EAAmCC,SAAnC;IACH;EACJ;;EACDI,IAAI,CAAClB,OAAD,EAAU;IACV,IAAImB,EAAJ,EAAQC,EAAR;;IACA,IAAI,CAACpB,OAAL,EAAc;MACV;IACH;;IACD,KAAKT,SAAL,GAAiBR,yBAAyB,CAACiB,OAAO,CAACT,SAAT,EAAqBW,QAAD,IAAc;MACxE,MAAMmB,GAAG,GAAG,IAAIpC,QAAJ,EAAZ;MACAoC,GAAG,CAACC,IAAJ,CAASpB,QAAT;MACA,OAAOmB,GAAP;IACH,CAJyC,CAA1C;IAKA,KAAK7B,sBAAL,GAA8BT,yBAAyB,CAAC,CAACqC,EAAE,GAAG,CAACD,EAAE,GAAGnB,OAAO,CAACe,aAAd,MAAiC,IAAjC,IAAyCI,EAAE,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,EAAE,CAACI,KAA3E,MAAsF,IAAtF,IAA8FH,EAAE,KAAK,KAAK,CAA1G,GAA8G,KAAK,CAAnH,GAAuHA,EAAE,CAAC7B,SAA3H,EAAuIW,QAAD,IAAc;MACvM,MAAMmB,GAAG,GAAG,IAAIpC,QAAJ,EAAZ;MACAoC,GAAG,CAACC,IAAJ,CAASpB,QAAT;MACA,OAAOmB,GAAP;IACH,CAJsD,CAAvD;IAKAtC,yBAAyB,CAAC,KAAKQ,SAAN,EAAkBW,QAAD,IAAc;MACpD,KAAKH,WAAL,CAAiBG,QAAjB;IACH,CAFwB,CAAzB;EAGH;;EACDsB,cAAc,CAACC,QAAD,EAAW;IACrB,KAAK,MAAMvB,QAAX,IAAuB,KAAKZ,KAA5B,EAAmC;MAC/BY,QAAQ,CAACwB,OAAT,CAAiBD,QAAjB;;MACA,IAAIA,QAAQ,CAACE,SAAb,EAAwB;QACpB;MACH;IACJ;EACJ;;EACDC,cAAc,CAAC1B,QAAD,EAAW;IACrB,MAAM2B,KAAK,GAAG,KAAKvC,KAAL,CAAWwC,OAAX,CAAmB5B,QAAnB,CAAd;;IACA,IAAI2B,KAAK,IAAI,CAAb,EAAgB;MACZ,KAAKvC,KAAL,CAAWyC,MAAX,CAAkBF,KAAlB,EAAyB,CAAzB;IACH;EACJ;;EACDG,MAAM,GAAG;IACL,KAAK,MAAM9B,QAAX,IAAuB,KAAKZ,KAA5B,EAAmC;MAC/BY,QAAQ,CAAC8B,MAAT;IACH;EACJ;;EACDC,IAAI,GAAG;IACH,KAAK3C,KAAL,GAAa,EAAb;EACH;;AAtEkB"},"metadata":{},"sourceType":"module"}