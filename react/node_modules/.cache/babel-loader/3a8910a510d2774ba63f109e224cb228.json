{"ast":null,"code":"import \"./pathseg\";\nimport { PolygonMask } from \"./Options/Classes/PolygonMask\";\nimport { PolygonMaskInstance } from \"./PolygonMaskInstance\";\n\nclass PolygonMaskPlugin {\n  constructor(engine) {\n    this.id = \"polygonMask\";\n    this._engine = engine;\n  }\n\n  getPlugin(container) {\n    return new PolygonMaskInstance(container, this._engine);\n  }\n\n  loadOptions(options, source) {\n    if (!this.needsPlugin(source)) {\n      return;\n    }\n\n    const optionsCast = options;\n    let polygonOptions = optionsCast.polygon;\n\n    if ((polygonOptions === null || polygonOptions === void 0 ? void 0 : polygonOptions.load) === undefined) {\n      optionsCast.polygon = polygonOptions = new PolygonMask();\n    }\n\n    polygonOptions.load(source === null || source === void 0 ? void 0 : source.polygon);\n  }\n\n  needsPlugin(options) {\n    var _a, _b, _c;\n\n    return (_b = (_a = options === null || options === void 0 ? void 0 : options.polygon) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : ((_c = options === null || options === void 0 ? void 0 : options.polygon) === null || _c === void 0 ? void 0 : _c.type) !== undefined && options.polygon.type !== \"none\";\n  }\n\n}\n\nexport async function loadPolygonMaskPlugin(engine) {\n  const plugin = new PolygonMaskPlugin(engine);\n  await engine.addPlugin(plugin);\n}\nexport * from \"./Enums/PolygonMaskInlineArrangement\";\nexport * from \"./Enums/PolygonMaskMoveType\";\nexport * from \"./Enums/PolygonMaskType\";\nexport * from \"./Options/Interfaces/IPolygonMaskOptions\";","map":{"version":3,"names":["PolygonMask","PolygonMaskInstance","PolygonMaskPlugin","constructor","engine","id","_engine","getPlugin","container","loadOptions","options","source","needsPlugin","optionsCast","polygonOptions","polygon","load","undefined","_a","_b","_c","enable","type","loadPolygonMaskPlugin","plugin","addPlugin"],"sources":["/home/nicolas/Development/personal/react/nicolaslucer0.github.io/react/node_modules/tsparticles-plugin-polygon-mask/esm/index.js"],"sourcesContent":["import \"./pathseg\";\nimport { PolygonMask } from \"./Options/Classes/PolygonMask\";\nimport { PolygonMaskInstance } from \"./PolygonMaskInstance\";\nclass PolygonMaskPlugin {\n    constructor(engine) {\n        this.id = \"polygonMask\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return new PolygonMaskInstance(container, this._engine);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        let polygonOptions = optionsCast.polygon;\n        if ((polygonOptions === null || polygonOptions === void 0 ? void 0 : polygonOptions.load) === undefined) {\n            optionsCast.polygon = polygonOptions = new PolygonMask();\n        }\n        polygonOptions.load(source === null || source === void 0 ? void 0 : source.polygon);\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        return ((_b = (_a = options === null || options === void 0 ? void 0 : options.polygon) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : (((_c = options === null || options === void 0 ? void 0 : options.polygon) === null || _c === void 0 ? void 0 : _c.type) !== undefined && options.polygon.type !== \"none\"));\n    }\n}\nexport async function loadPolygonMaskPlugin(engine) {\n    const plugin = new PolygonMaskPlugin(engine);\n    await engine.addPlugin(plugin);\n}\nexport * from \"./Enums/PolygonMaskInlineArrangement\";\nexport * from \"./Enums/PolygonMaskMoveType\";\nexport * from \"./Enums/PolygonMaskType\";\nexport * from \"./Options/Interfaces/IPolygonMaskOptions\";\n"],"mappings":"AAAA,OAAO,WAAP;AACA,SAASA,WAAT,QAA4B,+BAA5B;AACA,SAASC,mBAAT,QAAoC,uBAApC;;AACA,MAAMC,iBAAN,CAAwB;EACpBC,WAAW,CAACC,MAAD,EAAS;IAChB,KAAKC,EAAL,GAAU,aAAV;IACA,KAAKC,OAAL,GAAeF,MAAf;EACH;;EACDG,SAAS,CAACC,SAAD,EAAY;IACjB,OAAO,IAAIP,mBAAJ,CAAwBO,SAAxB,EAAmC,KAAKF,OAAxC,CAAP;EACH;;EACDG,WAAW,CAACC,OAAD,EAAUC,MAAV,EAAkB;IACzB,IAAI,CAAC,KAAKC,WAAL,CAAiBD,MAAjB,CAAL,EAA+B;MAC3B;IACH;;IACD,MAAME,WAAW,GAAGH,OAApB;IACA,IAAII,cAAc,GAAGD,WAAW,CAACE,OAAjC;;IACA,IAAI,CAACD,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,cAAc,CAACE,IAAhF,MAA0FC,SAA9F,EAAyG;MACrGJ,WAAW,CAACE,OAAZ,GAAsBD,cAAc,GAAG,IAAId,WAAJ,EAAvC;IACH;;IACDc,cAAc,CAACE,IAAf,CAAoBL,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACI,OAA3E;EACH;;EACDH,WAAW,CAACF,OAAD,EAAU;IACjB,IAAIQ,EAAJ,EAAQC,EAAR,EAAYC,EAAZ;;IACA,OAAQ,CAACD,EAAE,GAAG,CAACD,EAAE,GAAGR,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACK,OAAhE,MAA6E,IAA7E,IAAqFG,EAAE,KAAK,KAAK,CAAjG,GAAqG,KAAK,CAA1G,GAA8GA,EAAE,CAACG,MAAvH,MAAmI,IAAnI,IAA2IF,EAAE,KAAK,KAAK,CAAvJ,GAA2JA,EAA3J,GAAiK,CAAC,CAACC,EAAE,GAAGV,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACK,OAAhE,MAA6E,IAA7E,IAAqFK,EAAE,KAAK,KAAK,CAAjG,GAAqG,KAAK,CAA1G,GAA8GA,EAAE,CAACE,IAAlH,MAA4HL,SAA5H,IAAyIP,OAAO,CAACK,OAAR,CAAgBO,IAAhB,KAAyB,MAA3U;EACH;;AAtBmB;;AAwBxB,OAAO,eAAeC,qBAAf,CAAqCnB,MAArC,EAA6C;EAChD,MAAMoB,MAAM,GAAG,IAAItB,iBAAJ,CAAsBE,MAAtB,CAAf;EACA,MAAMA,MAAM,CAACqB,SAAP,CAAiBD,MAAjB,CAAN;AACH;AACD,cAAc,sCAAd;AACA,cAAc,6BAAd;AACA,cAAc,yBAAd;AACA,cAAc,0CAAd"},"metadata":{},"sourceType":"module"}